name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Runs on every push to the main branch

jobs:
  train_model:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/requirements.txt

      - name: Train Model
        run: python bikeshare_model/train_pipeline.py  # Ensure you have this script in your repo

      #- name: Save Model Artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: trained-model
      #    path: trained_models/bikeshare__model_output_v0.0.1.pkl  # Adjust based on your model output file

  test_model:
    runs-on: ubuntu-latest
    needs: train_model
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      #- name: Download Model Artifact
      #  uses: actions/download-artifact@v4
      #  with:
      #    name: trained-model
      #    path: trained_models/bikeshare__model_output_v0.0.1.pkl

      - name: Install dependencies
        run: pip install -r requirements/test_requirements.txt

      - name: Run Tests
        run: pytest tests/  # Ensure you have test cases in a 'tests' folder

  build_package:
    runs-on: ubuntu-latest
    needs: test_model
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Package
        run: python setup.py bdist_wheel

      #- name: Save Package Artifact
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: package
      #    path: dist/*.whl

  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: build_package
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      #- name: Download Package Artifact
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: package
      #    path: dist/

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}bikeshare-api:latest -f bike_sharing_api/Dockerfile .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/bikeshare-api:latest ${{ secrets.DOCKERHUB_USERNAME }}/bikeshare-api:latest
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/bike-sharing-api/bikeshare-api:latest
